/*
 * Copyright (C) Photon Vision.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

#pragma once

// THIS FILE WAS AUTO-GENERATED BY ./photon-targeting/generate_messages.py. DO NOT MODIFY

#include "photon/dataflow/structures/Packet.h"
#include "photon/targeting/PhotonPipelineResult.h"

template <>
struct WPILIB_DLLEXPORT photon::Struct<photon::PhotonPipelineResult> {
  static constexpr std::string_view GetSchemaHash() {
    return "0337df4d28ecedb5252b85de6403b0eb";
  }

  static constexpr std::string_view GetSchema() {
    return "{\"fields\": [{\"name\": \"metadata\", \"type\": \"PhotonPipelineMetadata\"}, {\"name\": \"targets\", \"type\": \"PhotonTrackedTarget\", \"vla\": true}, {\"name\": \"multiTagResult\", \"optional\": true, \"type\": \"MultiTargetPNPResult\"}], \"name\": \"PhotonPipelineResult\"}";
  }

  static photon::PhotonPipelineResult Unpack(photon::Packet& packet);
  static void Pack(photon::Packet& packet, const photon::PhotonPipelineResult& value);
};

static_assert(photon::PhotonStructSerializable<photon::PhotonPipelineResult>);