/*
 * Copyright (C) Photon Vision.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 */

// THIS FILE WAS AUTO-GENERATED BY ./photon-targeting/generate_messages.py. DO NOT MODIFY

package org.photonvision.struct;

import org.photonvision.common.dataflow.structures.Packet;
import org.photonvision.common.dataflow.structures.PacketSerde;

// Assume that the base class lives here and we can import it
import org.photonvision.targeting.*;


/**
 * This is a test
 */
public class PhotonPipelineResultSerde implements PacketSerde<PhotonPipelineResult> {
    

    public PhotonPipelineMetadata metadata;
    public long targets;
    

    @Override
    public int getMaxByteSize() {
        // TODO Auto-generated method stub
        throw new UnsupportedOperationException("Unimplemented method 'getMaxByteSize'");
    }

    @Override
    public void pack(Packet packet, PhotonPipelineResult value) {
        // explicitly cast to avoid accidentally encoding the wrong thing
        packet.encode((PhotonPipelineMetadata) value.metadata);
        packet.encode((long) value.targets);
    }

    @Override
    public PhotonPipelineResult unpack(Packet packet) {
        var ret = new PhotonPipelineResult();
        ret.metadata = packet.();
        ret.targets = packet.decodeLong();
        return ret;
    }
}