###############################################################################
## Copyright (C) Photon Vision.
###############################################################################
## This program is free software: you can redistribute it and/or modify
## it under the terms of the GNU General Public License as published by
## the Free Software Foundation, either version 3 of the License, or
## (at your option) any later version.
##
## This program is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with this program.  If not, see <https://www.gnu.org/licenses/>.
###############################################################################

###############################################################################
## THIS FILE WAS AUTO-GENERATED BY ./photon-serde/generate_messages.py.
##                        --> DO NOT MODIFY <--
###############################################################################

from ..targeting import *

class MultiTargetPNPResultSerde:

    # Message definition md5sum. See photon_packet.adoc for details
    MESSAGE_VERSION = "cd29d899dd41f83f08ea26868735724c"
    MESSAGE_FORMAT = "PnpResult estimatedPose;int16[?] fiducialIDsUsed;"


    @staticmethod
    def pack(packet: 'Packet', value: 'MultiTargetPNPResult') -> None:

        # field estimatedPose is of non-intrinsic type PnpResult
        PnpResult.photonStruct.pack(packet, value.estimatedPose)

        # fiducialIDsUsed is an intrinsic VLA!
        packet.encodeShort(value.fiducialIDsUsed)


    @staticmethod
    def unpack(packet: 'Packet') -> 'MultiTargetPNPResult':
        ret = MultiTargetPNPResult()

        # estimatedPose is of non-intrinsic type PnpResult
        ret.estimatedPose = PnpResult.photonStruct.unpack(packet)

        # fiducialIDsUsed is a custom VLA!
        ret.fiducialIDsUsed = packet.decodeShortList()

        return ret


# Hack ourselves into the base class
MultiTargetPNPResult.photonStruct = MultiTargetPNPResultSerde()