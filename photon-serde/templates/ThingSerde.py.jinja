from photonlibpy.packet import Packet

class {{ name}}Serde:
    
    # Message definition md5sum. See photon_packet.adoc for details
    MESSAGE_VERSION = "{{ message_hash }}"
    MESSAGE_FORMAT = "{{ message_fmt }}"

    def populateFromPacket(self, packet: Packet) -> Packet:
        {% for field in fields -%}
        self.{{ field.name}} = packet.Unpack<{{ field | get_qualified_name }}>(),
        {%- if not loop.last %}
        {% endif -%}
        {% endfor %}

        # self.sequenceID = packet.decodei64()
        # self.captureTimestampMicros = packet.decodei64()
        # self.publishTimestampMicros = packet.decodei64()

        # targetCount = packet.decode8()

        # self.targets = []
        # for _ in range(targetCount):
        #     target = PhotonTrackedTarget()
        #     target.createFromPacket(packet)
        #     self.targets.append(target)

        # self.multiTagResult = MultiTargetPNPResult()
        # self.multiTagResult.createFromPacket(packet)

        # return packet

